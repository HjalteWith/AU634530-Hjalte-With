filter(year == 1952) %>%
select(country, gdpPercap) %>%
arrange(desc(gdpPercap))
library(tidyverse)
library(gganimate)
library(gifski)
library(av)
library(gapminder)
str(gapminder)
unique(gapminder$year)
head(gapminder)
ggplot(subset(gapminder, year == 2007), aes(gdpPercap, lifeExp, size = pop)) +
geom_point() +
scale_x_log10()
ggplot(subset(gapminder, year == 2007), aes(gdpPercap, lifeExp, size = pop, color = continent)) +
geom_point() +
scale_x_log10()
ggplot(subset(gapminder, year == 2007), aes(gdpPercap, lifeExp, size = population, color = continent)) +
geom_point() +
scale_x_log10()
ggplot(subset(gapminder, year == 2007), aes(gdpPercap, lifeExp, size = population, color = continent)) +
geom_point() +
scale_x_log10()
3. *Differentiate the **continents** by color, and fix the axis labels and units to be more legible (**Hint**: the 2.50e+08 is so called "scientific notation", which you might want to eliminate)*
```{}
ggplot(subset(gapminder, year == 2007), aes(gdpPercap, lifeExp, size = pop, color = continent)) +
geom_point() +
scale_x_log10()
```
ggplot(subset(gapminder, year == 2007), aes(gdpPercap, lifeExp, size = pop, color = continent)) +
geom_point() +
scale_x_log10()
3. *Differentiate the **continents** by color, and fix the axis labels and units to be more legible (**Hint**: the 2.50e+08 is so called "scientific notation", which you might want to eliminate)*
```{Differentiate by continents}
ggplot(subset(gapminder, year == 2007), aes(gdpPercap, lifeExp, size = pop, color = continent)) +
geom_point() +
scale_x_log10()
```
()
3. *Differentiate the **continents** by color, and fix the axis labels and units to be more legible (**Hint**: the 2.50e+08 is so called "scientific notation", which you might want to eliminate)*
```{Differentiate_by_continents}
ggplot(subset(gapminder, year == 2007), aes(gdpPercap, lifeExp, size = pop, color = continent)) +
geom_point() +
scale_x_log10()
```
3. *Differentiate the **continents** by color, and fix the axis labels and units to be more legible (**Hint**: the 2.50e+08 is so called "scientific notation", which you might want to eliminate)*
```{Differentiate_by_continents}
options(scipen = 999)
ggplot(subset(gapminder, year == 2007), aes(gdpPercap, lifeExp, size = pop, color = continent)) +
geom_point() +
scale_x_log10()
```
3. *Differentiate the **continents** by color, and fix the axis labels and units to be more legible (**Hint**: the 2.50e+08 is so called "scientific notation", which you might want to eliminate)*
```{Differentiate_by_continents}
options(scipen = 999)
ggplot(subset(gapminder, year == 2007), aes(gdpPercap, lifeExp, size = pop, color = continent)) +
geom_point() +
scale_x_log10() +
+labs(y= "y axis name", x = "x axis name")
```
options(scipen = 999)
ggplot(subset(gapminder, year == 2007), aes(gdpPercap, lifeExp, size = pop, color = continent)) +
geom_point() +
scale_x_log10() +
labs(y= "y axis name", x = "x axis name")
3. *Differentiate the **continents** by color, and fix the axis labels and units to be more legible (**Hint**: the 2.50e+08 is so called "scientific notation", which you might want to eliminate)*
```{Differentiate_by_continents}
options(scipen = 999)
ggplot(subset(gapminder, year == 2007), aes(gdpPercap, lifeExp, size = pop, color = continent)) +
geom_point() +
scale_x_log10() +
labs(y= "Life expectancy", x = "GDP pr. capita")
```
gapminder %>%
filter(year == 2007) %>%
select(country, gdpPercap) %>%
arrange(desc(gdpPercap))
4. *What are the five richest countries in the world in 2007?*
```{5_richest countries}
gapminder %>%
filter(year == 2007) %>%
select(country[1:5], gdpPercap) %>%
arrange(desc(gdpPercap))
```
4. *What are the five richest countries in the world in 2007?*
```{5_richest countries}
gapminder %>%
filter(year == 2007) %>%
select((country[1:5]), gdpPercap) %>%
arrange(desc(gdpPercap))
```
gapminder %>%
filter(year == 2007) %>%
select((country[1:5]), gdpPercap) %>%
arrange(desc(gdpPercap))
4. *What are the five richest countries in the world in 2007?*
```{5_richest countries}
gapminder %>%
filter(year == 2007) %>%
select(country, gdpPercap) %>%
arrange(desc(gdpPercap)) %>%
filter(country[1:5])
```
4. *What are the five richest countries in the world in 2007?*
```{5_richest countries}
gapminder %>%
filter(year == 2007) %>%
select(country, gdpPercap) %>%
arrange(desc(gdpPercap)) %>%
head(5)
```
anim <- ggplot(gapminder, aes(gdpPercap, lifeExp, size = pop)) +
geom_point() +
scale_x_log10()  # convert x to log scale
anim
anim + transition_states(year,
transition_length = 1,
state_length = 1)
anim2 <- ggplot(gapminder, aes(gdpPercap, lifeExp, size = pop)) +
geom_point() +
scale_x_log10() + # convert x to log scale
transition_time(year)
anim2
library(tidyverse)
library(gganimate)
library(gifski)
library(av)
library(gapminder)
anim2 <- ggplot(gapminder, aes(gdpPercap, lifeExp, size = pop)) +
geom_point() +
scale_x_log10() + # convert x to log scale
transition_time(year)
anim2
str(gapminder)
unique(gapminder$year)
head(gapminder)
theme_set(theme_bw())  # set theme to white background for better visibility
ggplot(subset(gapminder, year == 1952), aes(gdpPercap, lifeExp, size = pop)) +
geom_point() +
scale_x_log10()
gapminder %>%
filter(year == 1952) %>%
select(country, gdpPercap) %>%
arrange(desc(gdpPercap))
ggplot(subset(gapminder, year == 2007), aes(gdpPercap, lifeExp, size = pop)) +
geom_point() +
scale_x_log10()
options(scipen = 999)
ggplot(subset(gapminder, year == 2007), aes(gdpPercap, lifeExp, size = pop, color = continent)) +
geom_point() +
scale_x_log10() +
labs(y= "Life expectancy", x = "GDP pr. capita")
gapminder %>%
filter(year == 2007) %>%
select(country, gdpPercap) %>%
arrange(desc(gdpPercap)) %>%
head(5)
anim <- ggplot(gapminder, aes(gdpPercap, lifeExp, size = pop)) +
geom_point() +
scale_x_log10()  # convert x to log scale
anim
anim2 <- ggplot(gapminder, aes(gdpPercap, lifeExp, size = pop)) +
geom_point() +
scale_x_log10() +
transition_time(year)
anim2
View(anim2)
View(anim2)
anim2 <- ggplot(gapminder, aes(gdpPercap, lifeExp, size = pop)) +
geom_point() +
scale_x_log10() +
transition_time(year) +
labs(title = "{Year}") +
transition_states(year, transition_length = 3, state_length = 1)
anim2
anim2 <- ggplot(gapminder, aes(gdpPercap, lifeExp, size = pop)) +
geom_point() +
scale_x_log10() +
transition_time(year)
anim2
anim2 <- ggplot(gapminder, aes(gdpPercap, lifeExp, size = pop)) +
geom_point() +
scale_x_log10() +
transition_time(year) +
labs(title = "{Year}")
anim2
anim2 <- ggplot(gapminder, aes(gdpPercap, lifeExp, size = pop)) +
geom_point() +
scale_x_log10() +
transition_time(year)
anim2
anim2 <- ggplot(gapminder, aes(gdpPercap, lifeExp, size = pop)) +
geom_point() +
scale_x_log10() +
transition_time(year) +
transition_states(year)
anim2
anim2 <- ggplot(gapminder, aes(gdpPercap, lifeExp, size = pop)) +
geom_point() +
scale_x_log10() +
transition_time(year) +
transition_states(year) +
labs(title = "{closest_state}") +
anim2
anim2 <- ggplot(gapminder, aes(gdpPercap, lifeExp, size = pop)) +
geom_point() +
scale_x_log10() +
transition_time(year) +
transition_states(year) +
labs(title = "{closest_state}")
anim2
anim2 <- ggplot(gapminder, aes(gdpPercap, lifeExp, size = pop)) +
geom_point() +
scale_x_log10() +
labs(title = 'Year: {frame_time}', x = 'gdpPercap', y = 'lifeExp') +
transition_time(year)
anim2
anim3 <- ggplot(gapminder, aes(gdpPercap, lifeExp, size = pop, color = continent)) +
geom_point() +
scale_x_log10() + # convert x to log scale
transition_time(year) +
labs( title = "year:{frame_time}", x = "GDP per Capita", y = "Life Expectancy")
anim3
<- ggplot(gapminder, aes(gdpPercap, lifeExp, size = pop, color = continent)) +
geom_point() +
scale_x_log10() + # convert x to log scale
transition_time(year) +
labs( title = "year:{frame_time}", x = "GDP per Capita", y = "Life Expectancy")
library(tidyverse)
library(gganimate)
library(gifski)
library(av)
library(gapminder)
anim3 <- ggplot(gapminder, aes(gdpPercap, lifeExp, size = pop, color = continent)) +
geom_point() +
scale_x_log10() + # convert x to log scale
transition_time(year) +
labs( title = "year:{frame_time}", x = "GDP per Capita", y = "Life Expectancy")
anim3
View(anim3)
View(anim2)
head(gapminder)
filter(continent == "Asia", year == 2000) %>%
select(country, gdpPercap) %>%
arrange(order(gdpPercap)) %>%
head(3) %>%
ggplot(aes(x= country, y = gdpPercap, fill = country)) + geom_bar(stat = "identity")
gapminder %>%
filter(continent == "Asia", year == 2000) %>%
select(country, gdpPercap) %>%
arrange(order(gdpPercap)) %>%
head(3) %>%
ggplot(aes(x= country, y = gdpPercap, fill = country)) + geom_bar(stat = "identity")
gapminder %>%
filter(continent == "Asia", year == 2000) %>%
select(country, gdpPercap) %>%
arrange(order(gdpPercap)) %>%
head(3) %>%
ggplot(aes(x= country, y = gdpPercap, fill = gdpPercap)) + geom_bar(stat = "identity")
gapminder %>%
filter(continent == "Asia", year == 2000) %>%
select(country, gdpPercap) %>%
arrange(order(gdpPercap)) %>%
head(3) %>%
options(scipen=999) # changing the scientific notation to whole numbers.
ggplot(subset(gapminder, year == 2000), aes(gdpPercap, color = country))
gapminder %>%
filter(continent == "Asia", year == 2000) %>%
select(country, gdpPercap) %>%
arrange(order(gdpPercap)) %>%
head(3) %>%
ggplot(subset(gapminder, year == 2000), aes(gdpPercap, color = country))
gapminder %>%
filter(continent == "Asia", year == 2000) %>%
select(country, gdpPercap) %>%
arrange(order(gdpPercap)) %>%
head(3) %>%
ggplot(subset(gapminder, year == 2000), aes(gdpPercap, year, color = country))
gapminder %>%
filter(continent == "Asia", year == 2000) %>%
select(country, gdpPercap) %>%
arrange(order(gdpPercap)) %>%
head(3) %>%
ggplot(subset(gapminder, year == 2000), aes(gdpPercap, year, color = country)
gapminder %>%
filter(continent == "Asia", year == 2000) %>%
select(country, gdpPercap) %>%
arrange(order(gdpPercap)) %>%
head(3) %>%
ggplot(subset(gapminder, year == 2000), aes(gdpPercap, year, color = country)
gapminder %>%
filter(continent == "Asia", year == 2000) %>%
select(country, gdpPercap) %>%
arrange(order(gdpPercap)) %>%
head(3) %>%
ggplot(subset(gapminder, year == 2000), aes(gdpPercap, year, color = country))
library(tidyverse)
library(gganimate)
library(gifski)
library(av)
library(gapminder)
str(gapminder)
unique(gapminder$year)
head(gapminder)
theme_set(theme_bw())  # set theme to white background for better visibility
ggplot(subset(gapminder, year == 1952), aes(gdpPercap, lifeExp, size = pop)) +
geom_point() +
scale_x_log10()
gapminder %>% #chosing dataset gapminder
filter(year == 1952) %>% #Take every data in the dataset from the year 1952
select(country, gdpPercap) %>% #select data within the coloumn country and gdpPercap in the year 1952
arrange(desc(gdpPercap)) #Arrange the countries with gdpPercap in descending order
ggplot(subset(gapminder, year == 2007), aes(gdpPercap, lifeExp, size = pop)) +
geom_point() +
scale_x_log10()
options(scipen = 999) #changes the scientific notations to whole numbers
ggplot(subset(gapminder, year == 2007), aes(gdpPercap, lifeExp, size = pop, color = continent)) + #creating a ggplot the only looks at the year 2007, and has gdpPercap on the x-axis, lifeExp on the y-axis. The plot also changes the size of the dots by population and the color by continent
geom_point() + #creating a scatterplot
scale_x_log10() + #scales down the big difference in numbers in gdp
labs(y= "Life expectancy", x = "GDP pr. capita") #creates new names on the y and x axis
```
gapminder %>%
filter(year == 2007) %>% #filtering for the year 2007
select(country, gdpPercap) %>% #selecting country and gdpPercap as data output
arrange(desc(gdpPercap)) %>%  #arranges gdpPercap in descending order
head(5) #makes the output take only the top 5 from the descending order
anim <- ggplot(gapminder, aes(gdpPercap, lifeExp, size = pop)) +
geom_point() +
scale_x_log10()  # convert x to log scale
anim
anim + transition_states(year,
transition_length = 1,
state_length = 1)
gapminder %>%
filter(continent == "Asia", year == 2000) %>% #filters the asien countries in year 2000
select(country, gdpPercap) %>% #selects country and gdpPercap as data output
arrange(order(gdpPercap)) %>% #arranges in asscending order, since the order() has asscending by default
head(3) %>% #only takes the top three countries.
ggplot(aes(x= country, y = gdpPercap, fill = country)) + geom_bar(stat = "identity")
library(tidyverse)
library(gganimate)
library(gifski)
library(av)
library(gapminder)
anim2 <- ggplot(gapminder, aes(gdpPercap, lifeExp, size = pop)) +
geom_point() +
scale_x_log10() +
transition_time(year)
anim2
fahr_to_kelvin <- function(temp) {
kelvin <- ((temp - 32) * (5 / 9)) + 273.15
return(kelvin)
}
fahr_to_kelvin(32)
kelvin_to_celsius(48)
return(celsius)
kelvin_to_celsius <- function(temp){
celsius <- ((temp - 32)*(5 / 9) - 273.15)
return(celsius)
kelvin_to_celsius(48)
kelvin_to_celsius(48)
kelvin_to_celsius(32)
return(celsius)
kelvin_to_celsius(32)
kelvin_to_celsius <- function(temp){
celsius <- temp - 273.15
return(celsius)
}
kelvin_to_celsius(32)
kelvin_to_celsius(500)
fahr_to_kelvin(32)
fahr_to_kelvin(32)
fahr_to_kelvin <- function(temp) {
kelvin <- ((temp - 32) * (5 / 9)) + 273.15
return(kelvin)
}
fahr_to_kelvin(32)
kelvin_to_celsius <- function(temp){
celsius <- temp - 273.15
return(celsius)
}
kelvin_to_celsius(500)
fahr_to_kelvin <- function(temp) {
kelvin <- ((temp - 32) * (5 / 9)) + 273.15
return(kelvin)
}
fahr_to_kelvin(32)
kelvin_to_celsius <- function(temp){
celsius <- temp - 273.15
return(celsius)
}
kelvin_to_celsius(500)
fahr_to_celsius <- funcion(temp){
celsius <- (temp - 32) * (5 / 9)
return(celsius)
}
fahr_to_celsius(50)
fahr_to_celsius <- funcion(temp){
celsius <- (temp - 32) * (5 / 9)
return(celsius)
fahr_to_celsius <- funcion(temp) {
celsius <- (temp - 32) * (5 / 9)
return(celsius)
}
fahr_to_celsius <- function(temp) {
celsius <- (temp - 32) * (5 / 9)
return(celsius)
}
fahr_to_celsius(50)
fahr_to_celsius_2 <- function(temp) {
temp_k <- fahr_to_kelvin(temp)
result <- kelvin_to_celsius(temp_k)
return(result)
}
fahr_to_celsius_2(50)
fahr_to_kelvin <- function(temp) {
kelvin <- ((temp - 32) * (5 / 9)) + 273.15
return(kelvin)
}
fahr_to_kelvin(32)
kelvin_to_celsius <- function(temp){
celsius <- temp - 273.15
return(celsius)
}
kelvin_to_celsius(500)
fahr_to_celsius <- function(temp) {
celsius <- (temp - 32) * (5 / 9)
return(celsius)
}
fahr_to_celsius(50)
fahr_to_celsius_2 <- function(temp) {
temp_k <- fahr_to_kelvin(temp)
result <- kelvin_to_celsius(temp_k)
return(result)
}
fahr_to_celsius_2(50)
my_mean <- function(xx){
result <- sum(x)/lenght(x)
return(result)
}
my_mean <- function(x){
result <- sum(x)/lenght(x)
return(result)
}
my_vec <- c(1,2,4,5,6)
my_mean(my_vec)
my_mean <- function(x){
result <- sum(x)/length(x)
return(result)
}
my_mean(my_vec)
my_vec <- c(1,2,4,5,6,NA)
my_mean(my_vec)
my_mean <- function(x){
x <- na.omit(x)
result <- sum(x)/length(x)
return(result)
}
my_mean(my_vec)
strange_vec <- c(1,2,3,"dog","cat")
as.numeric(strange_vec)
my_mean <- function(x){
x1 <- as.numeric(x)
x2 <- na.omit(x1)
result <- sum(x2)/length(x2)
return(result)
}
my_mean(my_vec)
my_mean(strange_vec)
View(my_mean)
fahr_to_kelvin_defensive <- function(temp) {
if (!is.numeric(temp)){
stop("temp must be numeric vector.")
}
kelvin <- ((temp - 32) * (5 / 9)) + 273.15
return(kelvin)
}
fahr_to_kelvin_defensive("Simon")
x = 5
if(x>4){
print("x is bigger than 4")
}
x = 4
if(x>4){
print("x is bigger than 4")
}
if(x>4){
print("x is bigger than 4")
} else{
x == 4
print("x equals 4")
} else if(x<4)
print("x is smaller than 4")
}
x = 3
if(x>4){
print("x is bigger than 4")
} else{
x == 4
print("x equals 4")
} else if(x<4){
print("x is smaller than 4")
}
}
x = 3
if(x>4){
print("x is bigger than 4")
} else if(x == 4){
print("x equals 4")
} else {
print("x is smaller than 4")
}
